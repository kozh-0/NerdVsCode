version: '3'
services:

  backend:
    image: "backend-image"
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - db
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/nerdvscode
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    networks:
      - platform-network


  db:
    image: 'postgres:13.1-alpine'
    volumes:
      - postgres_data:/var/lib/postgresl/data/
      - ./backend/src/main/resources/sql/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=nerdvscode
    networks:
      - platform-network

  frontend:
    image: "frontend-image"
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    networks:
      - platform-network

volumes:
  postgres_data:

networks:
  platform-network:
    driver: bridge